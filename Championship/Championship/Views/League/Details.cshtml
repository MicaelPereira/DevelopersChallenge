@model Championship.Models.League

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>
<style>
    .tools { display: none; }
    .label { color: #000; }
</style>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<div class="row">
    <div class="col-md-3">
    </div>
    @if (Model.Teams != null)
    {
        int iteratorTeam = 0;
        string nameOfTheTeam = string.Empty;

        foreach (var team in Model.Teams)
        {
            if (iteratorTeam == 0)
            {
                nameOfTheTeam = team.Name;
            }
            else
            {
                nameOfTheTeam += "," + team.Name;
            }
            iteratorTeam++;
        }
        var arr1 = nameOfTheTeam.Split(',');
        var arr = new string[,] {  };
        <input type="hidden" value="@nameOfTheTeam" id="hdnTeams" />
    }

    <div class="col-md-9">
        <div id="save">

            <script type="text/javascript">
                function mountArray() {
                    var arrTeams = $("#hdnTeams").val().split(",");
                    var arrPerPlay = [];
                    var j = 0, l = 0;
                    
                    arrPerPlay[j] = [];
                    for (var i = 0; i < arrTeams.length; i++) {
                        var value = arrTeams[i];
                        arrPerPlay[j][l] = value;

                        if (l == 1) {
                            l = 0;
                            j++;
                            if (i < arrTeams.length - 1)
                                arrPerPlay[j] = [];
                        }
                        else {
                            l++;
                        }
                    }
                    return arrPerPlay;
                }

                
                var saveData = {
                teams : mountArray(),
                results: [
                    [
                        //Array per steps
                    ]
                ]
            };

            /* Called whenever bracket is modified
                *
                * data:     changed bracket object in format given to init
                * userData: optional data given when bracket is created.
                */
            function saveFn(data, userData) {
                //var json = JSON.stringfy(data)
                //$('#saveOutput').text('POST '+userData+' '+json)
                //console.log('passou')
                /* You probably want to do something like this
                jQuery.ajax("rest/"+userData, {contentType: 'application/json',
                                                dataType: 'json',
                                                type: 'post',
                                                data: json})
                */
            }

            $(function () {
                var container = $('div#save .demo')
                container.bracket({
                    init: saveData,
                    save: saveFn,
                    userData: "http://myapi"
                })

                /* You can also inquiry the current data */
                var data = container.bracket('data')
                //debugger;
                console.log(JSON.stringfy(data))
            });
            </script>
            <div class="demo"> </div>
        </div>
    </div>
</div>